<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="../OrderImportFile.wsdl"/>
      <rootElement name="Order" namespace="http://TargetNamespace.com/OrderImportFile"/>
    </source>
    <source type="XSD">
      <schema location="../xsd/filename.xsd"/>
      <rootElement name="FileName" namespace="http://www.fn.org"/>
      <param name="FN" />
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="../ORDERIMPORT_INSERT_TABLE.wsdl"/>
      <rootElement name="XxwfsUkLandOrderImportCollection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/ORDERIMPORT_INSERT_TABLE"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.7.0(build 130301.0647.0008) AT [TUE JUL 15 15:11:45 IST 2014]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:top="http://xmlns.oracle.com/pcbpel/adapter/db/top/ORDERIMPORT_INSERT_TABLE"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:di="http://www.directory.org"
                xmlns:pc="http://xmlns.oracle.com/pcbpel/"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:imp1="http://TargetNamespace.com/OrderImportFile"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/ftp/UKLubes-SOA/UKLubesOrder/OrderImportFile"
                xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/UKLubes-SOA/UKLubesOrder/ORDERIMPORT_INSERT_TABLE"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:fn="http://www.fn.org"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl pc plt wsdl imp1 tns fn jca xsd top ns0 xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref ldap">
  <xsl:param name="FN"/>
  <xsl:template match="/">
    <top:XxwfsUkLandOrderImportCollection>
      <top:XxwfsUkLandOrderImport>
        <xsl:choose>
          <xsl:when test='$FN/fn:FileName/fn:Directory_Path = "/UKLubes/MobilOrderImport"'>
            <top:loadSource>
              <xsl:value-of select="oraext:query-database(&quot;SELECT oos.name FROM apps.oe_order_sources oos,apps.fnd_lookup_values flv WHERE oos.order_source_id = TO_NUMBER(TRIM(flv.attribute3)) AND oos.enabled_flag = 'Y' AND flv.enabled_flag = 'Y' AND flv.lookup_type = 'WFS_UK_LUBES' AND flv.attribute4 ='/UKLubes/MobilOrderImport'&quot;,false(),false(),&quot;jdbc/APPSnonXA&quot;)"/>
            </top:loadSource>
          </xsl:when>
          <xsl:when test='$FN/fn:FileName/fn:Directory_Path = "/UKLubes/CastrolOrderImport"'>
            <top:loadSource>
              <xsl:value-of select="oraext:query-database(&quot;SELECT oos.name FROM apps.oe_order_sources oos,apps.fnd_lookup_values flv WHERE oos.order_source_id = TO_NUMBER(TRIM(flv.attribute3)) AND oos.enabled_flag = 'Y' AND flv.enabled_flag = 'Y' AND flv.lookup_type = 'WFS_UK_LUBES' AND flv.attribute4 ='/UKLubes/CastrolOrderImport'&quot;,false(),false(),&quot;jdbc/APPSnonXA&quot;)"/>
            </top:loadSource>
          </xsl:when>
          <xsl:when test='$FN/fn:FileName/fn:Directory_Path = "/UKLubes/CheronOrderImport"'>
            <top:loadSource>
              <xsl:value-of select="oraext:query-database(&quot;SELECT oos.name FROM apps.oe_order_sources oos,apps.fnd_lookup_values flv WHERE oos.order_source_id = TO_NUMBER(TRIM(flv.attribute3)) AND oos.enabled_flag = 'Y' AND flv.enabled_flag = 'Y' AND flv.lookup_type = 'WFS_UK_LUBES' AND flv.attribute4 ='/UKLubes/CheronOrderImport'&quot;,false(),false(),&quot;jdbc/APPSnonXA&quot;)"/>
            </top:loadSource>
          </xsl:when>
        </xsl:choose>
        <top:fileName>
          <xsl:value-of select='concat($FN/fn:FileName/fn:filename,"_",xp20:current-dateTime())'/>
        </top:fileName>
        <xsl:choose>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 2.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:OrderNumber) = "null")'>
            <top:processStatus>
              <xsl:text disable-output-escaping="no">REJECTED</xsl:text>
            </top:processStatus>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:OrderNumber) = "null")'>
            <top:processStatus>
              <xsl:text disable-output-escaping="no">REJECTED</xsl:text>
            </top:processStatus>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:LineNumber) = "null")'>
            <top:processStatus>
              <xsl:text disable-output-escaping="no">REJECTED</xsl:text>
            </top:processStatus>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 2.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:PONumber) = "null")'>
            <top:processStatus>
              <xsl:text disable-output-escaping="no">REJECTED</xsl:text>
            </top:processStatus>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:PONumber) = "null")'>
            <top:processStatus>
              <xsl:text disable-output-escaping="no">REJECTED</xsl:text>
            </top:processStatus>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 2.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:DeliveryNumber) = "null")'>
            <top:processStatus>
              <xsl:text disable-output-escaping="no">REJECTED</xsl:text>
            </top:processStatus>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:DeliveryNumber) = "null")'>
            <top:processStatus>
              <xsl:text disable-output-escaping="no">REJECTED</xsl:text>
            </top:processStatus>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:OrderQTY) = "null")'>
            <top:processStatus>
              <xsl:text disable-output-escaping="no">REJECTED</xsl:text>
            </top:processStatus>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:OrderItemNumber) = "null")'>
            <top:processStatus>
              <xsl:text disable-output-escaping="no">REJECTED</xsl:text>
            </top:processStatus>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 1.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipPostal) = "null")'>
            <top:processStatus>
              <xsl:text disable-output-escaping="no">REJECTED</xsl:text>
            </top:processStatus>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 2.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipPostal) = "null")'>
            <top:processStatus>
              <xsl:text disable-output-escaping="no">REJECTED</xsl:text>
            </top:processStatus>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipPostal) = "null")'>
            <top:processStatus>
              <xsl:text disable-output-escaping="no">REJECTED</xsl:text>
            </top:processStatus>
          </xsl:when>
          <xsl:otherwise>
            <top:processStatus>
              <xsl:text disable-output-escaping="no">NEW</xsl:text>
            </top:processStatus>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 2.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:OrderNumber) = "null")'>
            <top:errorMessage>
              <xsl:text disable-output-escaping="no">Order Number Should not be null for Type 2 </xsl:text>
            </top:errorMessage>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:OrderNumber) = "null")'>
            <top:errorMessage>
              <xsl:text disable-output-escaping="no">Order Number Should not be null for Type 3 </xsl:text>
            </top:errorMessage>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:LineNumber) = "null")'>
            <top:errorMessage>
              <xsl:text disable-output-escaping="no">Line Number Should not be null for Type 3</xsl:text>
            </top:errorMessage>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 2.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:DeliveryNumber) = "null")'>
            <top:errorMessage>
              <xsl:text disable-output-escaping="no">Delivery Number Should not be null for Type 2</xsl:text>
            </top:errorMessage>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:DeliveryNumber) = "null")'>
            <top:errorMessage>
              <xsl:text disable-output-escaping="no">Delivery Number Should not be null for Type 3</xsl:text>
            </top:errorMessage>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 2.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:PONumber) = "null")'>
            <top:errorMessage>
              <xsl:text disable-output-escaping="no">PONumber Should not be null for Type 2 </xsl:text>
            </top:errorMessage>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:PONumber) = "null")'>
            <top:errorMessage>
              <xsl:text disable-output-escaping="no">PONumber Should not be null for Type 3</xsl:text>
            </top:errorMessage>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:OrderQTY) = "null")'>
            <top:errorMessage>
              <xsl:text disable-output-escaping="no">OrderQTY Should not be null for Type 3</xsl:text>
            </top:errorMessage>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:OrderItemNumber) = "null")'>
            <top:errorMessage>
              <xsl:text disable-output-escaping="no">OrderItemNumber Should not be null for Type 3</xsl:text>
            </top:errorMessage>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 1.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipPostal) = "null")'>
            <top:errorMessage>
              <xsl:text disable-output-escaping="no">ShipPostal Should not be null for Type 1</xsl:text>
            </top:errorMessage>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 2.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipPostal) = "null")'>
            <top:errorMessage>
              <xsl:text disable-output-escaping="no">ShipPostal Should not be null for Type 2</xsl:text>
            </top:errorMessage>
          </xsl:when>
          <xsl:when test='(/imp1:Order/imp1:OrderType/imp1:RecType = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipPostal) = "null")'>
            <top:errorMessage>
              <xsl:text disable-output-escaping="no">ShipPostal Should not be null for Type 3</xsl:text>
            </top:errorMessage>
          </xsl:when>
        </xsl:choose>
        <top:recordType>
          <xsl:value-of select="number(normalize-space(/imp1:Order/imp1:OrderType/imp1:RecType))"/>
        </top:recordType>
        <top:extSiteUseId>
          <xsl:value-of select="number(normalize-space(/imp1:Order/imp1:OrderType/imp1:SiteUseID))"/>
        </top:extSiteUseId>
        <top:extCustNumber>
          <xsl:value-of select="number(normalize-space(/imp1:Order/imp1:OrderType/imp1:Custnumber))"/>
        </top:extCustNumber>
        <top:extOrderNumber>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:OrderNumber)"/>
        </top:extOrderNumber>
        <xsl:choose>
          <xsl:when test='(normalize-space(/imp1:Order/imp1:OrderType/imp1:RecType) = 1.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:LineNumber) = "null")'>
            <top:extLineNumber>
              <xsl:text disable-output-escaping="no">0</xsl:text>
            </top:extLineNumber>
          </xsl:when>
          <xsl:when test='(normalize-space(/imp1:Order/imp1:OrderType/imp1:RecType) = 2.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:LineNumber) = "null")'>
            <top:extLineNumber>
              <xsl:text disable-output-escaping="no">0</xsl:text>
            </top:extLineNumber>
          </xsl:when>
          <xsl:when test='(normalize-space(/imp1:Order/imp1:OrderType/imp1:RecType) = 3.0) and (normalize-space(/imp1:Order/imp1:OrderType/imp1:LineNumber) = "null")'>
            <top:extLineNumber>
              <xsl:text disable-output-escaping="no">0</xsl:text>
            </top:extLineNumber>
          </xsl:when>
          <xsl:otherwise>
            <top:extLineNumber>
              <xsl:value-of select="number(normalize-space(/imp1:Order/imp1:OrderType/imp1:LineNumber))"/>
            </top:extLineNumber>
          </xsl:otherwise>
        </xsl:choose>
        <top:documentCategory>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:DOCCategory)"/>
        </top:documentCategory>
        <top:custVatRegNum>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:CustVat)"/>
        </top:custVatRegNum>
        <top:custContactName>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ContactName)"/>
        </top:custContactName>
        <top:custContactNumber>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ContactNumber)"/>
        </top:custContactNumber>
        <top:uploadingPoint>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:UploadPoint)"/>
        </top:uploadingPoint>
        <top:deliveryDate>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:DeliveryDate)"/>
        </top:deliveryDate>
        <!--  <top:deliveryDate>
          <xsl:value-of select="xp20:format-dateTime(concat(substring(normalize-space(/imp1:Order/imp1:OrderType/imp1:DeliveryDate),5.0),&quot;-&quot;,substring(normalize-space(/imp1:Order/imp1:OrderType/imp1:DeliveryDate),3.0,2.0),&quot;-&quot;,substring(normalize-space(/imp1:Order/imp1:OrderType/imp1:DeliveryDate),1.0,2.0)),'[DO1]-[M01]-[Y0001]')"/>
        </top:deliveryDate>-->
        <top:deliveryInstructions>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:DeliveryInstruction)"/>
        </top:deliveryInstructions>
        <top:shippingInstructions>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipInstruction)"/>
        </top:shippingInstructions>
        <top:deliveryNumber>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:DeliveryNumber)"/>
        </top:deliveryNumber>
        <top:extPoNumber>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:PONumber)"/>
        </top:extPoNumber>
        <top:extPoDate>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:PODate)"/>
        </top:extPoDate>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:OrderItemNumber) != "null"'>
          <top:itemNumber>
            <xsl:value-of select="number(normalize-space(/imp1:Order/imp1:OrderType/imp1:OrderItemNumber))"/>
          </top:itemNumber>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:OrderQTY) != "null"'>
          <top:quantity>
            <xsl:value-of select="number(normalize-space(/imp1:Order/imp1:OrderType/imp1:OrderQTY))"/>
          </top:quantity>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:UOM) != "null"'>
          <top:uomCode>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:UOM)"/>
          </top:uomCode>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:ProdDescription) != "null"'>
          <top:itemDescription>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ProdDescription)"/>
          </top:itemDescription>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:ComodityCode) != "null"'>
          <top:itemComodityCode>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ComodityCode)"/>
          </top:itemComodityCode>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:BOL) != "null"'>
          <top:bolNumber>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:BOL)"/>
          </top:bolNumber>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:PickDate) != "null"'>
          <top:pickedDate>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:PickDate)"/>
          </top:pickedDate>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:QTY) != "null"'>
          <top:pickedQuantity>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:QTY)"/>
          </top:pickedQuantity>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:UOM2) != "null"'>
          <top:pickedUom>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:UOM2)"/>
          </top:pickedUom>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:BatchNumber) != "null"'>
          <top:pickedBatch>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:BatchNumber)"/>
          </top:pickedBatch>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:ProdTemp) != "null"'>
          <top:itemTemperature>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ProdTemp)"/>
          </top:itemTemperature>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:ProdTempUOM) != "null"'>
          <top:itemTemperatureUom>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ProdTempUOM)"/>
          </top:itemTemperatureUom>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:ProdDensity) != "null"'>
          <top:itemDensity>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ProdDensity)"/>
          </top:itemDensity>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:StatusBuyBack) != "null"'>
          <top:buybackStatus>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:StatusBuyBack)"/>
          </top:buybackStatus>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:Route) != "null"'>
          <top:route>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:Route)"/>
          </top:route>
        </xsl:if>
        <top:shipToAddr1>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipAddr1)"/>
        </top:shipToAddr1>
        <top:shipToAddr2>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipAddr2)"/>
        </top:shipToAddr2>
        <top:shipToAddr3>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipAddr3)"/>
        </top:shipToAddr3>
        <top:shipToStreet>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipStreet)"/>
        </top:shipToStreet>
        <top:shipToCity>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipCity)"/>
        </top:shipToCity>
        <top:shipToCountry>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipCountry)"/>
        </top:shipToCountry>
        <top:shipToPostalCode>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ShipPostal)"/>
        </top:shipToPostalCode>
        <top:billToAddr1>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:BillAddr1)"/>
        </top:billToAddr1>
        <top:billToAddr2>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:BillAddr2)"/>
        </top:billToAddr2>
        <top:billToAddr3>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:BillAddr3)"/>
        </top:billToAddr3>
        <top:billToStreet>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:BillStreet)"/>
        </top:billToStreet>
        <top:billToCity>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:BillCity)"/>
        </top:billToCity>
        <top:billToCountry>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:BillCountry)"/>
        </top:billToCountry>
        <top:billToPostalCode>
          <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:BillPostal)"/>
        </top:billToPostalCode>
        <top:custDistrNumber>
          <xsl:value-of select="number(normalize-space(/imp1:Order/imp1:OrderType/imp1:CustDistNumber))"/>
        </top:custDistrNumber>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:ProdTemp2) != "null"'>
          <top:prodTemperature>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ProdTemp2)"/>
          </top:prodTemperature>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:ProdTempUOM2) != "null"'>
          <top:prodTemperatureUom>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:ProdTempUOM2)"/>
          </top:prodTemperatureUom>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:TempRng) != "null"'>
          <top:prodTemperatureLow>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:TempRng)"/>
          </top:prodTemperatureLow>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:TempRng2) != "null"'>
          <top:prodTemperatureHigh>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:TempRng2)"/>
          </top:prodTemperatureHigh>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:PartialStatus) != "null"'>
          <top:deliveryStatus>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:PartialStatus)"/>
          </top:deliveryStatus>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:Filler) != "null"'>
          <top:filler1>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:Filler)"/>
          </top:filler1>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:Filler2) != "null"'>
          <top:filler2>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:Filler2)"/>
          </top:filler2>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:Filler3) != "null"'>
          <top:filler3>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:Filler3)"/>
          </top:filler3>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:Filler4) != "null"'>
          <top:filler4>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:Filler4)"/>
          </top:filler4>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:Filler5) != "null"'>
          <top:filler5>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:Filler5)"/>
          </top:filler5>
        </xsl:if>
        <xsl:if test='normalize-space(/imp1:Order/imp1:OrderType/imp1:Filler6) != "null"'>
          <top:filler6>
            <xsl:value-of select="normalize-space(/imp1:Order/imp1:OrderType/imp1:Filler6)"/>
          </top:filler6>
        </xsl:if>
        <top:requestId>
          <xsl:text disable-output-escaping="no">1</xsl:text>
        </top:requestId>
        <top:programId>
          <xsl:text disable-output-escaping="no">1</xsl:text>
        </top:programId>
        <top:programApplicationId>
          <xsl:text disable-output-escaping="no">1</xsl:text>
        </top:programApplicationId>
        <top:creationDate>
          <xsl:value-of select="xp20:current-date()"/>
        </top:creationDate>
        <top:createdBy>
          <xsl:text disable-output-escaping="no">1</xsl:text>
        </top:createdBy>
        <top:lastUpdateDate>
          <xsl:value-of select="xp20:current-date()"/>
        </top:lastUpdateDate>
        <top:lastUpdatedBy>
          <xsl:text disable-output-escaping="no">1</xsl:text>
        </top:lastUpdatedBy>
        <top:lastUpdateLogin>
          <xsl:text disable-output-escaping="no">1</xsl:text>
        </top:lastUpdateLogin>
        <top:lastUpdateRequestId>
          <xsl:text disable-output-escaping="no">1</xsl:text>
        </top:lastUpdateRequestId>
      </top:XxwfsUkLandOrderImport>
    </top:XxwfsUkLandOrderImportCollection>
  </xsl:template>
</xsl:stylesheet>
